/*
 * Tests of MFM
 *
 * How to run the tests:
 * > mocha test/reaction-lib.ts --require ts-node/register
 *
 * To specify test:
 * > mocha test/reaction-lib.ts --require ts-node/register -g 'test name'
 */

import * as assert from 'assert';

import { toDbReaction } from '../src/misc/reaction-lib';

describe('toDbReaction', () => {
	it('Êó¢Â≠ò„ÅÆÊñáÂ≠óÂàó„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØ„Åù„ÅÆ„Åæ„Åæ', () => {
		assert.strictEqual(toDbReaction('like'), 'like');
	});

	it('Unicode„Éó„É™„É≥„ÅØÂØøÂè∏Âåñ‰∏çËÉΩ„Å®„Åô„Çã„Åü„ÇÅÊñáÂ≠óÂàóÂåñ„Åó„Å™„ÅÑ', () => {
		assert.strictEqual(toDbReaction('üçÆ'), 'üçÆ');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã like', () => {
		assert.strictEqual(toDbReaction('üëç'), 'like');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã love', () => {
		assert.strictEqual(toDbReaction('‚ù§Ô∏è'), 'love');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã love Áï∞‰ΩìÂ≠ó„Çª„É¨„ÇØ„Çø„Å™„Åó', () => {
		assert.strictEqual(toDbReaction('‚ù§'), 'love');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã laugh', () => {
		assert.strictEqual(toDbReaction('üòÜ'), 'laugh');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã hmm', () => {
		assert.strictEqual(toDbReaction('ü§î'), 'hmm');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã surprise', () => {
		assert.strictEqual(toDbReaction('üòÆ'), 'surprise');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã congrats', () => {
		assert.strictEqual(toDbReaction('üéâ'), 'congrats');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã angry', () => {
		assert.strictEqual(toDbReaction('üí¢'), 'angry');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã confused', () => {
		assert.strictEqual(toDbReaction('üò•'), 'confused');
	});

	it('„Éó„É™„É≥‰ª•Â§ñ„ÅÆÊó¢Â≠ò„ÅÆ„É™„Ç¢„ÇØ„Ç∑„Éß„É≥„ÅØÊñáÂ≠óÂàóÂåñ„Åô„Çã rip', () => {
		assert.strictEqual(toDbReaction('üòá'), 'rip');
	});

	it('„Åù„Çå‰ª•Â§ñ„ÅØUnicode„ÅÆ„Åæ„Åæ', () => {
		assert.strictEqual(toDbReaction('üçÖ'), 'üçÖ');
	});

	it('Áï∞‰ΩìÂ≠ó„Çª„É¨„ÇØ„ÇøÈô§Âéª', () => {
		assert.strictEqual(toDbReaction('„äóÔ∏è'), '„äó');
	});

	it('Áï∞‰ΩìÂ≠ó„Çª„É¨„ÇØ„ÇøÈô§Âéª ÂøÖË¶Å„Å™„Åó', () => {
		assert.strictEqual(toDbReaction('„äó'), '„äó');
	});

	it('fallback star - undefined', () => {
		assert.strictEqual(toDbReaction(undefined), 'star');
	});

	it('fallback star - null', () => {
		assert.strictEqual(toDbReaction(null), 'star');
	});

	it('fallback star - empty', () => {
		assert.strictEqual(toDbReaction(''), 'star');
	});

	it('fallback star - unknown', () => {
		assert.strictEqual(toDbReaction('unknown'), 'star');
	});

	it('Unicode star „ÅØ fallback star „Åß„ÅØ„Å™„ÅÑ', () => {
		assert.strictEqual(toDbReaction('‚≠ê'), '‚≠ê');
	});
});
